{"version":3,"sources":["components/Header.js","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api.js","routes/Home/HomeContainer.js","routes/TV/TVPresenter.js","routes/TV/TVContainer.js","routes/Search/SearchPresenter.js","routes/Search/SearchContainer.js","routes/Detail/DetailPresenter.js","routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["StyledHeader","styled","header","List","ul","Item","li","selected","StyledLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","length","map","movie","poster_path","vote_average","Date","release_date","getFullYear","Message","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tvShow","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","searchTerm","movieResults","tvResults","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","substring","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","test","match","push","history","parsedId","parseInt","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2c4e7b7.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 4px solid\n    ${({ selected }) => (selected ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst StyledLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(function Header({ location: { pathname } }) {\n  return (\n    <StyledHeader>\n      <List>\n        <Item selected={pathname === '/'}>\n          <StyledLink to=\"/\">Movies</StyledLink>\n        </Item>\n        <Item selected={pathname === '/tv'}>\n          <StyledLink to=\"/tv\">TV Shows</StyledLink>\n        </Item>\n        <Item selected={pathname === '/search'}>\n          <StyledLink to=\"/search\">Search</StyledLink>\n        </Item>\n      </List>\n    </StyledHeader>\n  );\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Error = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n\nexport default Error;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={`/${isMovie ? 'movie' : 'tv'}/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : 'noPosterSmall.png'\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {` ${rating}`}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.number,\n  isMovie: PropTypes.bool.isRequired,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Jetflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={new Date(movie.release_date).getFullYear()}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={new Date(movie.release_date).getFullYear()}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={new Date(movie.release_date).getFullYear()}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ac3cac094225c9ea0022a8d0705ae88c',\n    language: 'ko-KR',\n  },\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  detail: (id) =>\n    api.get(`movie/${id}`, { params: { append_to_response: 'videos' } }),\n  search: (term) =>\n    api.get('search/movie', { params: { query: encodeURIComponent(term) } }),\n};\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  detail: (id) =>\n    api.get(`tv/${id}`, { params: { append_to_response: 'videos' } }),\n  search: (term) =>\n    api.get('search/tv', { params: { query: encodeURIComponent(term) } }),\n};\n\nexport default api;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { movieApi } from 'api';\n\nexport default class HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'components/Section';\nimport Loader from 'components/Loader';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Jetflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map((tvShow) => (\n              <Poster\n                key={tvShow.id}\n                id={tvShow.id}\n                title={tvShow.name}\n                imageUrl={tvShow.poster_path}\n                rating={tvShow.vote_average}\n                year={new Date(tvShow.first_air_date).getFullYear()}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map((tvShow) => (\n              <Poster\n                key={tvShow.id}\n                id={tvShow.id}\n                title={tvShow.name}\n                imageUrl={tvShow.poster_path}\n                rating={tvShow.vote_average}\n                year={new Date(tvShow.first_air_date).getFullYear()}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((tvShow) => (\n              <Poster\n                key={tvShow.id}\n                id={tvShow.id}\n                title={tvShow.name}\n                imageUrl={tvShow.poster_path}\n                rating={tvShow.vote_average}\n                year={new Date(tvShow.first_air_date).getFullYear()}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'components/Loader';\nimport Section from 'components/Section';\nimport Message from 'components/Message';\nimport Poster from 'components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  searchTerm,\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Jetflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={new Date(movie.release_date).getFullYear()}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((tvShow) => (\n                <Poster\n                  key={tvShow.id}\n                  id={tvShow.id}\n                  title={tvShow.name}\n                  imageUrl={tvShow.poster_path}\n                  rating={tvShow.vote_average}\n                  year={new Date(tvShow.first_air_date).getFullYear()}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n        </>\n      )}\n      {error && <Message text={error} color=\"#e74c3c\" />}\n      {tvResults &&\n        movieResults &&\n        tvResults.length === 0 &&\n        movieResults.length === 0 && (\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\n        )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  searchTerm: PropTypes.string,\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import { movieApi, tvApi } from 'api';\nimport React from 'react';\nimport SearchPresenter from './SearchPresenter';\n\nexport default class SearchContainer extends React.Component {\n  state = {\n    searchTerm: '',\n    movieResults: null,\n    tvResults: null,\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  async searchByTerm() {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { searchTerm, movieResults, tvResults, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        searchTerm={searchTerm}\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: contain;\n  border-radius: 5px;\n  background-repeat: no-repeat;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 100%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Jetflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <>\n      <Helmet>\n        <title>{result.title ? result.title : result.name} | Jetflix</title>\n      </Helmet>\n      <Container>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={`https://image.tmdb.org/t/p/original${\n              result.poster_path ? result.poster_path : '/noPosterSmall.png'\n            }`}\n          />\n          <Data>\n            <Title>{result.title ? result.title : result.name}</Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.runtime ? result.runtime : result.episode_run_time[0]}{' '}\n                min\n              </Item>\n              <Divider>•</Divider>\n              <Item>\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? genre.name\n                      : `${genre.name} / `\n                  )}\n              </Item>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n          </Data>\n        </Content>\n      </Container>\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import { movieApi, tvApi } from 'api';\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\n\nexport default class DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname },\n    } = this.props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: /^\\/movie\\//.test(pathname),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n      location: { pathname },\n    } = this.props;\n\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) return push('/');\n\n    const { isMovie } = this.state;\n    try {\n      if (isMovie) {\n        const { data: result } = await movieApi.detail(parsedId);\n        this.setState({ result });\n      } else {\n        const { data: result } = await tvApi.detail(parsedId);\n        this.setState({ result });\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport Header from 'components/Header';\nimport Home from 'routes/Home';\nimport TV from 'routes/TV';\nimport Search from 'routes/Search';\nimport Detail from 'routes/Detail';\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 80px;\n  }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'components/Router';\nimport GlobalStyles from 'components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nimport './api';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}